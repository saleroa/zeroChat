
#  bridge 模式中，可以通过 容器名 或者是 服务名 来充当 ip

version: '3'

services:

#components
  etcd:
    image: bitnami/etcd:3.4.15
    container_name: easy-chat-etcd
    ports:
      - "2379:2379"
    environment:
      - ETCD_ENABLE_V2=true
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    volumes:
      - ./components/etcd/data:/bitnami/etcd/data
      - ./components/etcd/logs:/bitnami/etcd/logs
    networks:
      easy-chat:

  redis:
    image: redis:6.0
    ports:
      - 6379:6379
    container_name: easy-chat-redis
    volumes:
      - ./components/redis/data:/data
      - ./components/redis/config/redis.conf:/etc/redis/redis.conf
    environment:
      TZ: Asia/Shanghai
    restart: always
    networks:
      easy-chat:
    command: redis-server --requirepass root123456 --appendonly yes

  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    container_name: easy-chat-mysql
    volumes:
      - ./components/mysql/data:/var/lib/mysql
      - /etc/localtime:/etc/localtime
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: root123456
    restart: always
    networks:
      easy-chat:

  mongo:
    image: mongo:4.0
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root123456
    ports:
      - 27017:27017
    volumes:
      - ./components/mongo/data:/data/db
      - /etc/localtime:/etc/localtime
    restart: always
    networks:
      easy-chat:

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      # 允许使用kraft，即Kafka替代Zookeeper
      KAFKA_ENABLE_KRAFT: yes
      TZ: Asia/Shanghai
      KAFKA_BROKER_ID: 0
      KAFKA_CREATE_TOPICS: "ws2ms_chat:8:1,ms2ps_chat:8:1,msg_to_mongo:8:1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"

     
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - 2181:2181
  #   container_name: zookeeper
  #   volumes:
  #     - /etc/localtime:/etc/localtime
  #   environment:
  #     TZ: Asia/Shanghai
  #   restart: always

  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   restart: always
  #   ports:
  #     - 9092:9092
  #   environment:
  #     TZ: Asia/Shanghai
  #     KAFKA_BROKER_ID: 0
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "ws2ms_chat:8:1,ms2ps_chat:8:1,msg_to_mongo:8:1"
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://192.168.117.80:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_LISTENERS: INSIDE://:9092
  #     KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
  #   depends_on:
  #     - zookeeper



# server part
  social-rpc:
    image: social-rpc:latest
    container_name: easy-chat-socialRpc
    ports:
    - "9002:9002"
    depends_on:
    - etcd
    - redis
    - mysql
    networks:
      easy-chat:

  social-api:
    image: social-api:latest
    container_name: easy-chat-socialApi
    ports:
    - "8002:8002"
    depends_on:
    - social-rpc
    - user-rpc
    networks:
      easy-chat:

  user-rpc:
    image: user-rpc:latest
    container_name: easy-chat-userRpc
    ports:
    - "9001:9001"
    depends_on:
    - etcd
    - redis
    - mysql
    networks:
      easy-chat:
  
  user-api:
    image: user-api:latest
    container_name: easy-chat-userApi
    ports:
    - "8001:8001"
    depends_on:
    - user-rpc
    networks:
      easy-chat:
  
  
networks: 
    easy-chat:
      driver: bridge